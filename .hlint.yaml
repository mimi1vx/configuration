# .hlint.yaml

# Specify additional command line arguments
- arguments: [ --threads ]

# Control which extensions/flags/modules/functions can be used
- extensions:
  - default: false
  - name:
      - ApplicativeDo
      - DeriveAnyClass
      - DeriveGeneric
      - MultiWayIf
      - NoImplicitPrelude
      - OverloadedLists
      - OverloadedStrings
      - RecordWildCards
      - TupleSections
      - TypeFamilies
  - { name: FlexibleInstances, within: [MyCabal, Oracle.Hackage] }

- flags:
  - { name: -fno-warn-orphans, within: [MyCabal, Config, Oracle.Hackage, Main] }

- modules:
  - { name: Distribution.Compat.CharParsing, within: [MyCabal] }
  - { name: Distribution.Compiler, within: [MyCabal] }
  - { name: Distribution.Package, within: [MyCabal] }
  - { name: Distribution.PackageDescription, within: [MyCabal] }
  - { name: Distribution.PackageDescription.Configuration, within: [MyCabal] }
  - { name: Distribution.PackageDescription.Parsec, within: [MyCabal] }
  - { name: Distribution.Parsec, within: [MyCabal] }
  - { name: Distribution.Parsec.FieldLineStream, within: [MyCabal] }
  - { name: Distribution.Pretty, within: [MyCabal] }
  - { name: Distribution.Simple.Utils, within: [MyCabal] }
  - { name: Distribution.SPDX, within: [MyCabal] }
  - { name: Distribution.System, within: [MyCabal] }
  - { name: Distribution.Text, within: [MyCabal] }
  - { name: Distribution.Types.ComponentRequestedSpec, within: [MyCabal] }
  - { name: Distribution.Types.PackageVersionConstraint, within: [MyCabal] }
  - { name: Distribution.Types.UnqualComponentName, within: [MyCabal] }
  - { name: Distribution.Utils.ShortText, within: [MyCabal] }
  - { name: Distribution.Version, within: [MyCabal] }

# - functions:
#   - {name: unsafePerformIO, within: []} # unsafePerformIO can only appear in no modules

# Add custom hints for this project
- error: { lhs: return, rhs: pure }

# Turn on hints that are off by default
- warn: { name: Use explicit module export list }
- group: { name: generalise, enabled: false }

# Ignore some builtin hints
# - ignore: {name: Use let}
# - ignore: {name: Use const, within: SpecialModule} # Only within certain modules

# Define some custom infix operators
# - fixity: infixr 3 ~^#^~
